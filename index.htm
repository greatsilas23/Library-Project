<!DOCTYPE html>
  <html lang="en">
    <head>
      <meta name="charset" content="utf-8">
      <meta name="author" content="greatsilas23">
      <title>&copy; &fracmv<sup>2</sup>r;</title>
     </head>
     <body>
       <div>
          <form action="" method="_POST" onsubmit="(e) => e !== '' ? localStorage.setItem(a, e.currentTarget.childNodes[2].value) : console.log(`err`)">
            <label>Name two programming paradigms<br><input type="radio"/><span>Procedural, Object Oriented</span><input type="radio"/><span>Functional, Imperative</span><input type="radio"/><span>Declarative, Functional</span></label>
            <label>Prove<br><span>P(x) = 0   </span><input type="radio"/><span>P(k + 1)</span></label>

            <label>Evaluate        <input type="radio"/><span>&lambda; (*xx)</span><input type="radio"/><span>&lambda; (*xx)4</span></label>


          <input value="submit" type="submit"/>
</form>

</div>
     </body>
     <script type="text/javascript">
        class A{
          constructor(a,b,c){
            this.x = x
          }
          function getX(){
            this.x !== '' ? return this.x : return 
          }
        
        }
        class AZ{
          constructor(x){
            this.id = x.id.toString()
            this.name = x.name.toString().toLowerCase()
            this.description = parseInt(x)
            this.isEmpty = false
          }
          function getId(){
            this.id !== '' ? return this.id : return
          }
          function next(){
            this.description !== '' ? return this.description++ : return
          }
          function pre(){
            this.description !== '' ? return this.description-- : return
          }
       }
       let az = new AZ(new Object({id: 'foo', name: 'foo', description: 1},{id: 'bar', name: 'bar', description: 1}))
       switch(az.getId()){
         case 'foo':
           return az.getId(az.next())
           break
       }

      let A = new A('foo','bar','')
      switch(A.getX.toString()){
        case 'foo':

          return this.getX().concat(%s, 'found') 

          break
       
      }


      document.querySelector('form').addEventListener('submit')
      </script>
    <html>




